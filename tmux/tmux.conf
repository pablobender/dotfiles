# Ring the bell if any background window rang a bell
set -g bell-action any

# Default termtype. If the rcfile sets $TERM, that overrides this value.
set -g default-terminal xterm-256color

# Keep your finger on ctrl, or don't
bind-key ^D detach-client

# Create splits and vertical splits
bind-key v split-window -h -p 50 -c "#{pane_current_path}"
bind-key ^V split-window -h -p 50 -c "#{pane_current_path}"
bind-key s split-window -p 50 -c "#{pane_current_path}"
bind-key ^S split-window -p 50 -c "#{pane_current_path}"

# Pane resize in all four directions using vi bindings.
# Can use these raw but I map them to shift-ctrl-<h,j,k,l> in iTerm.
bind -r H resize-pane -L 5
bind -r J resize-pane -D 5
bind -r K resize-pane -U 5
bind -r L resize-pane -R 5

# Smart pane switching with awareness of vim splits.
# Source: https://github.com/christoomey/vim-tmux-navigator
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Use vi keybindings for tmux commandline input.
# Note that to get command mode you need to hit ESC twice...
set -g status-keys vi

# Use vi keybindings in copy and choice modes
setw -g mode-keys vi

# disable set-clipboard in favor of tmux-yank behaviour
# [Enter] copies selection only to tmux copy buffer (not to system clipboard
# [y] copies selection also to system clipboard
set -g set-clipboard off

# easily toggle synchronization (mnemonic: e is for echo)
# sends input to all panes in a given window.
bind e setw synchronize-panes on
bind E setw synchronize-panes off

# set first window to index 1 (not 0) to map more to the keyboard layout...
set-option -g base-index 1
set-window-option -g pane-base-index 1
set-window-option -g mouse on

# color scheme (styled as pablobender/lightline-gruvbox.vim)
# BG_HARD=colour234
# BG0=colour235
# BG0_SOFT=colour236
# BG1=colour237
# BG2=colour239
# BG3=colour241
# BG4=colour243
# GRAY=colour245
# FG0_HARD=colour230
# FG0=colour229
# FG0_SOFT=colour228
# FG1=colour223
# FG2=colour250
# FG3=colour248
# FG4=colour246
# RED=colour167
# GREEN=colour142
# YELLOW=colour214
# BLUE=colour109
# PURPLE=colour175
# AQUA=colour108
# ORANGE=colour208
set -g status-left-length 52
set -g status-right-length 451
set -g window-style bg=colour236
set -g window-active-style bg=colour235
set -g window-status-separator ''
set -g status-style fg=colour223,bg=colour235
set -g pane-border-style bg=colour235,fg=colour239
set -g pane-active-border-style fg=colour109
set -g message-style bg=colour208,fg=colour235,bold
set -g status-left '#[fg=colour235,bg=colour223] ﲵ #S #[fg=colour223,bg=colour239,nobold]#[fg=colour223,bg=colour239,nobold] #(whoami) #[fg=colour239,bg=colour235,nobold]'
set -g window-status-format '#[fg=colour235,bg=colour237,nobold]#[fg=colour223,bg=colour237,nobold] #I #(pwd="#{pane_current_path}"; echo ${pwd####*/}) #W #[fg=colour237,bg=colour235,nobold]'
set -g window-status-current-format '#[fg=colour235,bg=colour109]#[fg=colour235,bg=colour109,bold]#{?window_zoomed_flag,#[fg=colour214],} #I #(pwd="#{pane_current_path}"; echo ${pwd####*/}) #W #[fg=colour109,bg=colour235,nobold]'
set-option -g status-interval 2

# Screen like binding
unbind C-b
set -g prefix C-a
bind -r a send-prefix

# No escape time for vi mode
set -sg escape-time 0

# Screen like binding for last window
unbind l
bind C-a last-window

# Bigger history
set -g history-limit 10000

# New windows/pane in $PWD
bind c new-window -c "#{pane_current_path}"

# Fix key bindings broken in tmux 2.1
set -g assume-paste-time 0

# set mouse on/off
bind m set-window-option -g mouse on
bind M set-window-option -g mouse off
bind C-m select-pane -m

# refresh-client
unbind r
bind r refresh-client

# tpm plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'tmux-plugins/tmux-yank'

set -g @yank_with_mouse off # or 'on' (default is on)

# Local config
if-shell "[ -f ~/.tmux.conf.user ]" 'source ~/.tmux.conf.user'

# load tmux plugin manager (tpm), after all
run -b '~/.tmux/plugins/tpm/tpm'
